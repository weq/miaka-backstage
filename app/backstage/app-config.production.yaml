app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  #baseUrl: https://${CUSTOM_DOMAIN}
  baseUrl: https://backstage.miaka.info

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  #baseUrl: https://${CUSTOM_DOMAIN}
  baseUrl: https://backstage.miaka.info
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen:
    port: 7007
  cors:
    origin: https://backstage.miaka.info

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      ssl:
        ca: # if you have a CA file and want to verify it you can uncomment this section
          $file: ./ca/DigiCertGlobalRootCA.crt.pem

catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations: []


# https://backstage.io/docs/auth/microsoft/provider
auth:
  environment: production
  providers:
    microsoft:
      production:
        clientId: ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}
    github:
      production:
        clientId: ${GITHUB_BACKSTAGE_CLIENTID}
        clientSecret: ${GITHUB_BACKSTAGE_CLIENTSECRET}

#techdocs:
#  builder: 'external'
#  publisher:
#    type: 'azureBlobStorage'
#    azureBlobStorage:
#      containerName: ${TECHDOCS_CONTAINER_NAME}
#      credentials:
#        accountName: ${TECHDOCS_STORAGE_ACCOUNT}

integrations:
  github:
    - host: github.com
      apps:
        - appId: ${GITHUB_BACKSTAGE_APPID}
          webhookUrl: ${GITHUB_BACKSTAGE_WEBHOOKURL}
          clientId: ${GITHUB_BACKSTAGE_CLIENTID}
          clientSecret: ${GITHUB_BACKSTAGE_CLIENTSECRET}
          webhookSecret: ${GITHUB_BACKSTAGE_WEBHOOKSECRET}
          privateKey: |
            ${GITHUB_BACKSTAGE_PRIVATEKEY}